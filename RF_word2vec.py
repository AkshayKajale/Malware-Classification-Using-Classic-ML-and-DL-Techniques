#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon May 18 21:12:30 2020

@author: akshay9
"""

# Random Forest Classification

# Importing the libraries
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
from sklearn.ensemble import RandomForestClassifier 
import matplotlib.pyplot as plt
import seaborn as sns; sns.set()


# Importing the dataset
dataset = pd.read_csv('labelledW2Vec.csv')
X = dataset.iloc[:,:-2].values
y = dataset.iloc[:,512].values

X_train = X[0:5600]
X_test = X[5600:6301]
y_train = y[0:5600]
y_test = y[5600:6301]

# Feature Scaling
'''sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)'''
classifier = RandomForestClassifier(n_estimators = 200, criterion = 'gini', random_state = 0, max_features = 'log2')
classifier.fit(X_train, y_train)
#Predicting the Test set results
y_pred = classifier.predict(X_test)
mat = confusion_matrix(y_test,y_pred)
print("\n")
print("Accuracy:",accuracy_score(y_test,y_pred))
print("\n")
print("Classification Report:\n")
print(classification_report(y_test, y_pred,target_names=['BHO', 'CeeInject','FakeRean', 'OnLineGames','Renos', 'Vobfus','Winwebsec']
))

sns.heatmap(mat.T, square=True, annot=True, fmt='d', cbar=False)
plt.xlabel('true label')
plt.ylabel('predicted label')


