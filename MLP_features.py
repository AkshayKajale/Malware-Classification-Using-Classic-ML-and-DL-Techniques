#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon May 18 20:49:20 2020

@author: akshay9
"""

from sklearn.neural_network import MLPClassifier
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import  confusion_matrix, accuracy_score, classification_report
import seaborn as sns; sns.set()
import matplotlib.pyplot as plt
            
dataset = pd.read_csv('labelledfeatures.csv')
X = dataset.iloc[:,:-2].values
y = dataset.iloc[:,328].values

X_train = X[0:5600]
X_test = X[5600:6301]
y_train = y[0:5600]
y_test = y[5600:6301]

#Scaling the data
scaler = StandardScaler()
scaler.fit(X_train)
X_train = scaler.transform(X_train)
X_test = scaler.transform(X_test)

#MLP Classifier

clf = MLPClassifier(solver='lbfgs', alpha = 1e-05 ,hidden_layer_sizes=(450,300,150), random_state=1, max_iter = 150, activation = 'tanh')
clf.fit(X_train, y_train)
y_pred = clf.predict(X_test)
print("Training Set Score:", clf.score(X_train,y_train))
print("Test Set Score:", clf.score(X_test, y_test))
print(confusion_matrix(y_test,y_pred))

mat = confusion_matrix(y_test,y_pred)
print("\n")
print("Accuracy:",accuracy_score(y_test,y_pred))
print("\n")
print("Classification Report:\n")
print(classification_report(y_test, y_pred,target_names=['BHO', 'CeeInject','FakeRean', 'OnLineGames','Renos', 'Vobfus','Winwebsec']
))

sns.heatmap(mat.T, square=True, annot=True, fmt='d', cbar=False)
plt.xlabel('true label')
plt.ylabel('predicted label')




                
